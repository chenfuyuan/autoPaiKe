<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ass.mapper.TCourseMapper" >
  <resultMap id="BaseResultMap" type="com.ass.pojo.TCourse" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="weektime" property="weektime" jdbcType="INTEGER" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="assess" property="assess" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="savNum" property="savnum" jdbcType="INTEGER" />
    <result column="departmentId" property="departmentid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="groups" property="groups" jdbcType="VARCHAR" />
    <result column="way" property="way" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, weektime, credit, created, updated, assess, type, number, savNum, departmentId, 
    status, groups, way
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ass.pojo.TCourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ass.pojo.TCourseExample" >
    delete from t_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ass.pojo.TCourse" >
    insert into t_course (id, name, weektime, 
      credit, created, updated, 
      assess, type, number, 
      savNum, departmentId, status, 
      groups, way)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{weektime,jdbcType=INTEGER}, 
      #{credit,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{assess,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, 
      #{savnum,jdbcType=INTEGER}, #{departmentid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{groups,jdbcType=VARCHAR}, #{way,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ass.pojo.TCourse" >
    insert into t_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="weektime != null" >
        weektime,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="assess != null" >
        assess,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="savnum != null" >
        savNum,
      </if>
      <if test="departmentid != null" >
        departmentId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="groups != null" >
        groups,
      </if>
      <if test="way != null" >
        way,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="weektime != null" >
        #{weektime,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="assess != null" >
        #{assess,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="savnum != null" >
        #{savnum,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="groups != null" >
        #{groups,jdbcType=VARCHAR},
      </if>
      <if test="way != null" >
        #{way,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ass.pojo.TCourseExample" resultType="java.lang.Integer" >
    select count(*) from t_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_course
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.weektime != null" >
        weektime = #{record.weektime,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.assess != null" >
        assess = #{record.assess,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.savnum != null" >
        savNum = #{record.savnum,jdbcType=INTEGER},
      </if>
      <if test="record.departmentid != null" >
        departmentId = #{record.departmentid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.groups != null" >
        groups = #{record.groups,jdbcType=VARCHAR},
      </if>
      <if test="record.way != null" >
        way = #{record.way,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_course
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      weektime = #{record.weektime,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      assess = #{record.assess,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      savNum = #{record.savnum,jdbcType=INTEGER},
      departmentId = #{record.departmentid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      groups = #{record.groups,jdbcType=VARCHAR},
      way = #{record.way,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ass.pojo.TCourse" >
    update t_course
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="weektime != null" >
        weektime = #{weektime,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="assess != null" >
        assess = #{assess,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="savnum != null" >
        savNum = #{savnum,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="groups != null" >
        groups = #{groups,jdbcType=VARCHAR},
      </if>
      <if test="way != null" >
        way = #{way,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ass.pojo.TCourse" >
    update t_course
    set name = #{name,jdbcType=VARCHAR},
      weektime = #{weektime,jdbcType=INTEGER},
      credit = #{credit,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      assess = #{assess,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      savNum = #{savnum,jdbcType=INTEGER},
      departmentId = #{departmentid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      groups = #{groups,jdbcType=VARCHAR},
      way = #{way,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectName" parameterType="String" resultType="String">
  	select name from t_course where status=1 and name like "%${value}%" limit 0,8
  </select>
  <select id="selectNameById" parameterType="Integer" resultType="String">
  	select name from t_course where status=1 and id = #{id}
  </select>
</mapper>